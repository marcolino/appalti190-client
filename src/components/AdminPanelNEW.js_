import React, { useState, useEffect } from "react";
import { makeStyles } from "@material-ui/styles";
import { DataGrid } from '@material-ui/data-grid';
import { useTranslation } from "react-i18next";
import { errorMessage } from "../libs/Misc";
import UserService from "../services/UserService";
import { toast } from "./Toast";
//import moment from "moment";
//import "moment/locale/it"; // import all needed locales...

const useStyles = makeStyles(theme => ({
	adminPanel: {
    fontSize: "1.1em",
	},
}));



function AdminPanel() {
	const classes = useStyles();
  const { t } = useTranslation();
  const [content, setContent] = useState({});

  //moment.locale("it");

  useEffect(() => {
    UserService.getAdminPanel().then(
      result => {
        if (result instanceof Error) {
          toast.error(errorMessage(result));
          return; // setContent(errorMessage(result));
        }
        setContent(result);
        console.log(content);
      },
    );
  }, []);

  const columns = [
    { field: 'id', headerName: 'ID', width: 90 },
    {
      field: 'firstName',
      headerName: 'First name',
      width: 150,
      editable: true,
    },
    {
      field: 'lastName',
      headerName: 'Last name',
      width: 150,
      editable: true,
    },
    {
      field: 'age',
      headerName: 'Age',
      type: 'number',
      width: 110,
      editable: true,
    },
    {
      field: 'fullName',
      headerName: 'Full name',
      description: 'This column has a value getter and is not sortable.',
      sortable: false,
      width: 160,
      valueGetter: (params) =>
        `${params.getValue(params.id, 'firstName') || ''} ${
          params.getValue(params.id, 'lastName') || ''
        }`,
    },
  ];
  
  const rows = [
    { id: 1, lastName: 'Snow', firstName: 'Jon', age: 35 },
    { id: 2, lastName: 'Lannister', firstName: 'Cersei', age: 42 },
    { id: 3, lastName: 'Lannister', firstName: 'Jaime', age: 45 },
    { id: 4, lastName: 'Stark', firstName: 'Arya', age: 16 },
    { id: 5, lastName: 'Targaryen', firstName: 'Daenerys', age: null },
    { id: 6, lastName: 'Melisandre', firstName: null, age: 150 },
    { id: 7, lastName: 'Clifford', firstName: 'Ferrara', age: 44 },
    { id: 8, lastName: 'Frances', firstName: 'Rossini', age: 36 },
    { id: 9, lastName: 'Roxie', firstName: 'Harvey', age: 65 },
  ];

  return (
    <div className={classes.adminPanel}>
      {`${t("Admin Panel")}`}
      <div style={{ height: 400, width: '100%' }}>
        <DataGrid
          rows={rows}
          columns={columns}
          rowsPerPageOptions={[5,10]}
          pageSize={5}
          checkboxSelection
          disableSelectionOnClick
        />
      </div>
{/*
      <Grid
          container
          spacing={2}
          direction="row"
          justifyContent="flex-start"
          alignItems="flex-start"
        >
          <pre>
            {
              JSON.stringify(content, null, 2)
            }
          </pre>
          {/* {
            data.users ? data.users.map(user => (
              <Grid item xs={12} key={user._id}>
                <Card>
                  <CardContent style={{ fontSize: "0.9em" }}>
                    <Typography color="text.primary">
                      {`${user.firstName} ${user.lastName}`}
                    </Typography>
                    <Typography color="text.secondary">
                      {user.email}
                    </Typography>
                    <Typography color="text.secondary">
                      {t("Roles") + ":"} {user.roles.length ? user.roles.join(", ") : "user"}{// "user" is default role}
                    </Typography>
                    <Typography color="text.secondary">
                      {t("Verified") + ":"} {user.isVerified ? t("yes") : t("no")}
                    </Typography>
                    <Typography color="text.secondary">
                      {t("Created on") + ":"} {moment(user.createdAt).locale("it").format("YYYY-MM-DD")}
                    </Typography>
                    <Typography color="text.secondary">
                      {t("Updated on") + ":"} {moment(user.updatedAt).locale("it").format("YYYY-MM-DD")}
                    </Typography>
                    <Typography color="text.secondary">
                      {t("Access token") + ":"} {user.accessToken}
                    </Typography>
                    <Typography color="text.secondary">
                      {"Content:"} {content}
                    </Typography>
                  </CardContent>
                </Card>
              </Grid>
            )) : "..."
          } * /}
        </Grid>
*/}
    </div>
  );
}

export default React.memo(AdminPanel);